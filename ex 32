#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

typedef struct Stack {
    char* data;
    struct Stack* next;
} Stack;

void push(Stack** top, const char* str) {
    Stack* new_node = (Stack*)malloc(sizeof(Stack));
    new_node->data = strdup(str);
    new_node->next = *top;
    *top = new_node;
}

void pop(Stack** top) {
    if (*top) {
        Stack* temp = *top;
        *top = (*top)->next;
        free(temp->data);
        free(temp);
    }
}

char* top(Stack* top) {
    return top ? top->data : "";
}

int main() {
    int Q;
    scanf("%d", &Q);
    
    char text[100000] = "";
    Stack* history = NULL;
    
    for (int i = 0; i < Q; i++) {
        int type;
        scanf("%d", &type);
        
        if (type == 1) {
            char append_str[100000];
            scanf("%s", append_str);
            push(&history, text);
            strcat(text, append_str);
        } else if (type == 2) {
            int k;
            scanf("%d", &k);
            push(&history, text);
            text[strlen(text) - k] = '\0';
        } else if (type == 3) {
            int k;
            scanf("%d", &k);
            printf("%c\n", text[k - 1]);
        } else if (type == 4) {
            strcpy(text, top(history));
            pop(&history);
        }
    }
    
    while (history) {
        pop(&history);
    }
    
    return 0;
}
