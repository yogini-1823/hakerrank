
#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* readline();
char* ltrim(char*);
char* rtrim(char*);
char** split_string(char*);

int parse_int(char*);

int* circularArrayRotation(int a_count, int* a, int k, int queries_count, int* queries, int* result_count) {
    *result_count = queries_count;
    int* result = malloc(queries_count * sizeof(int));
    
    // Normalize k to avoid unnecessary full rotations
    k = k % a_count;
    
    for (int i = 0; i < queries_count; i++) {
        int index = queries[i];
        result[i] = a[(index - k + a_count) % a_count];
    }
    
    return result;
}

int main() {
    int n, k, q;
    scanf("%d %d %d", &n, &k, &q);
    
    int* a = malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    
    int* queries = malloc(q * sizeof(int));
    for (int i = 0; i < q; i++) {
        scanf("%d", &queries[i]);
    }
    
    int result_count;
    int* result = circularArrayRotation(n, a, k, q, queries, &result_count);
    
    for (int i = 0; i < result_count; i++) {
        printf("%d\n", result[i]);
    }
    
    free(a);
    free(queries);
    free(result);
    
    return 0;
}
